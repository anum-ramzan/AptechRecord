@model AptechRecord.Models.BatchBook

@{
    ViewBag.Title = "Batch Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section contentHeader{
    <h1>
        Batch Book
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href=@Url.Action("Dashboard", "Admin")><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li><a href=@Url.Action("Index", "BatchBooks")><i class="fa fa-list"></i>Batch Books</a></li>
        <li>Add new batch book</li>
    </ol>
}
<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">@ViewBag.Title</h3>
            </div>
            <div class="box-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.BatchCode, "BatchCode", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("BatchCode", null, htmlAttributes: new { @class = "form-control selectpicker" })
                                @Html.ValidationMessageFor(model => model.BatchCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Course", "Course", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Course", null, "Select Course Type", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Book.Semester.CourseDetail.CourseDetailTree, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Course Type", "Course Type", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 TRCourse">
                                @Html.DropDownListFor(c => c.Book.Semester.CourseId, new List<SelectListItem>(), new { id = "CourseId", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Book.Semester.CourseId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Semester Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Book.Semester.SemesterName, new List<SelectListItem>(), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Book.Semester.SemesterName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Book Name", "Book Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("BatchBook1", new List<SelectListItem>(), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BatchBook1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BookStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("BookStatus", null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BookStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Book Changed" class="btn btn-default" />
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-info" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $('#Course').change(function () {
            $('#CourseId option').remove();
            $.ajax({
                type: "post",
                url: "/Books/GeCourseDetailList",
                data: { id: $('#Course').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var jobs = eval(data);
                    var items = '';
                    $('#CourseId').append("<option value='0'>Select Course type</option>");
                    $.each(jobs, function (i, item) {
                        $('#CourseId').append('<option value=' + item.CourseDetail1 + '>' + item.CourseDetailName + '</option>');
                    });

                }
            });
        });

        $('#CourseId').change(function () {
            $('#Book_Semester_SemesterName option').remove();
            $.ajax({
                type: "post",
                url: "/Books/GetCourseSemester",
                data: { id: $('#CourseId').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var jobs = eval(data);
                    var items = '';
                    $('#Book_Semester_SemesterName').append("<option value='0'>Select Semester</option>");
                    $.each(jobs, function (i, item) {
                        $('#Book_Semester_SemesterName').append('<option value=' + item.Id + '>' + item.SemesterName + '</option>');
                    });

                }
            });
        });
    });

    $('#Book_Semester_SemesterName').change(function () {
        $('#BatchBook1 option').remove();
        $.ajax({
            type: "get",
            url: "/Books/GetSemesterBooks",
            data: { id: $('#Book_Semester_SemesterName').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var jobs = eval(data);
                var items = '';
                $('#BatchBook1').append("<option value='0'>Select Book</option>");
                $.each(jobs, function (i, item) {
                    $('#BatchBook1').append('<option value=' + item.Id + '>' + item.BookName + '</option>');
                });

            }
        });
    });
</script>