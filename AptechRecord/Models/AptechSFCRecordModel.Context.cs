//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AptechRecord.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    public partial class AptechSFCRecordEntities : DbContext
    {
        public AptechSFCRecordEntities()
            : base("name=AptechSFCRecordEntities")
        {
        }
        //protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        //{
        //    optionsBuilder.UseSqlServer("YourConnectionStringHere");
        //}

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Attendance> Attendances { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<BatchBook> BatchBooks { get; set; }
        public virtual DbSet<BatchTeacherDetail> BatchTeacherDetails { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<CourseDetail> CourseDetails { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<Day> Days { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<LoginHistory> LoginHistories { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Semester> Semesters { get; set; }
        public virtual DbSet<SlotAssign> SlotAssigns { get; set; }
        public virtual DbSet<StudentBatch> StudentBatches { get; set; }
        public virtual DbSet<StudentBatchTransfer> StudentBatchTransfers { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<TimeSlot> TimeSlots { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
    
        public virtual ObjectResult<Nullable<int>> auto_sa_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("auto_sa_id");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_auto_attendance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_auto_attendance");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_auto_errorid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_auto_errorid");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_auto_loginhistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_auto_loginhistory");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_auto_userid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_auto_userid");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_auto_voucher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_auto_voucher");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_check_student_attendance(Nullable<int> studentid, Nullable<System.DateTime> date)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_check_student_attendance", studentidParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_check_student_voucher(Nullable<int> studentid, Nullable<System.DateTime> date)
        {
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_check_student_voucher", studentidParameter, dateParameter);
        }
    
        public virtual int usp_error_log(Nullable<int> id, string message, string detail, Nullable<System.DateTime> time)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("detail", detail) :
                new ObjectParameter("detail", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_error_log", idParameter, messageParameter, detailParameter, timeParameter);
        }
    
        public virtual int usp_insert_attendance(Nullable<int> id, Nullable<int> sid, Nullable<System.DateTime> date, string status, Nullable<System.DateTime> markat, Nullable<int> markby, string notes)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var markatParameter = markat.HasValue ?
                new ObjectParameter("markat", markat) :
                new ObjectParameter("markat", typeof(System.DateTime));
    
            var markbyParameter = markby.HasValue ?
                new ObjectParameter("markby", markby) :
                new ObjectParameter("markby", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert_attendance", idParameter, sidParameter, dateParameter, statusParameter, markatParameter, markbyParameter, notesParameter);
        }
    
        public virtual int usp_insert_voucher(Nullable<int> id, Nullable<int> sid, Nullable<System.DateTime> date, string status, Nullable<System.DateTime> markat, Nullable<int> markby, string notes)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var markatParameter = markat.HasValue ?
                new ObjectParameter("markat", markat) :
                new ObjectParameter("markat", typeof(System.DateTime));
    
            var markbyParameter = markby.HasValue ?
                new ObjectParameter("markby", markby) :
                new ObjectParameter("markby", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert_voucher", idParameter, sidParameter, dateParameter, statusParameter, markatParameter, markbyParameter, notesParameter);
        }
    
        public virtual ObjectResult<usp_login_Result> usp_login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_login_Result>("usp_login", usernameParameter, passwordParameter);
        }
    
        public virtual int usp_login_history(Nullable<int> id, Nullable<int> uid, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_login_history", idParameter, uidParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_recovery_batch_list_Result> usp_recovery_batch_list(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_recovery_batch_list_Result>("usp_recovery_batch_list", dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_recovery_ta(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_recovery_ta", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_recovery_tp(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_recovery_tp", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_recovery_ts(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_recovery_ts", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_recovery_vtr(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_recovery_vtr", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_recovery_vts(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_recovery_vts", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_recovery_vtu(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_recovery_vtu", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_report_student_report_Result> usp_report_student_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_report_student_report_Result>("usp_report_student_report");
        }
    
        public virtual ObjectResult<usp_report_student_report_between_dates_Result> usp_report_student_report_between_dates(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_report_student_report_between_dates_Result>("usp_report_student_report_between_dates", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<usp_report_student_report_for_user_Result> usp_report_student_report_for_user(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_report_student_report_for_user_Result>("usp_report_student_report_for_user", idParameter);
        }
    
        public virtual ObjectResult<usp_select_absent_student_Result> usp_select_absent_student(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_absent_student_Result>("usp_select_absent_student", batchParameter);
        }
    
        public virtual ObjectResult<usp_select_absentees_batch_Result> usp_select_absentees_batch(string day, Nullable<System.DateTime> date)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_absentees_batch_Result>("usp_select_absentees_batch", dayParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_select_absentees_followup_Result> usp_select_absentees_followup(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_absentees_followup_Result>("usp_select_absentees_followup", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_attendance_barchart_Result> usp_select_attendance_barchart(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_attendance_barchart_Result>("usp_select_attendance_barchart", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_attendance_student_Result> usp_select_attendance_student(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_attendance_student_Result>("usp_select_attendance_student", batchParameter);
        }
    
        public virtual ObjectResult<usp_select_bar_chart_Result> usp_select_bar_chart(string days, Nullable<System.DateTime> date)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_bar_chart_Result>("usp_select_bar_chart", daysParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_select_batch_days(string days)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_select_batch_days", daysParameter);
        }
    
        public virtual ObjectResult<usp_select_consolidated_attendance_Result> usp_select_consolidated_attendance(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_consolidated_attendance_Result>("usp_select_consolidated_attendance", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_customized_attendance_Result> usp_select_customized_attendance(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_customized_attendance_Result>("usp_select_customized_attendance", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<usp_select_date_wise_attendance_Result> usp_select_date_wise_attendance(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_date_wise_attendance_Result>("usp_select_date_wise_attendance", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<usp_select_date_wise_batch_detail_Result> usp_select_date_wise_batch_detail(string batch, Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_date_wise_batch_detail_Result>("usp_select_date_wise_batch_detail", batchParameter, date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<string> usp_select_distributed_voucher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_select_distributed_voucher");
        }
    
        public virtual ObjectResult<usp_select_dropList_Result> usp_select_dropList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_dropList_Result>("usp_select_dropList");
        }
    
        public virtual ObjectResult<usp_select_faculty_wise_Result> usp_select_faculty_wise(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_faculty_wise_Result>("usp_select_faculty_wise", dateParameter);
        }
    
        public virtual ObjectResult<string> usp_select_marked()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_select_marked");
        }
    
        public virtual ObjectResult<usp_select_MWFGrouping_Result> usp_select_MWFGrouping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_MWFGrouping_Result>("usp_select_MWFGrouping");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_select_sb()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_select_sb");
        }
    
        public virtual ObjectResult<usp_select_session_wise_attendance_Result> usp_select_session_wise_attendance(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_session_wise_attendance_Result>("usp_select_session_wise_attendance", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_student_attendance_Result> usp_select_student_attendance(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_student_attendance_Result>("usp_select_student_attendance", batchParameter);
        }
    
        public virtual ObjectResult<usp_select_student_wise_attendance_Result> usp_select_student_wise_attendance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_student_wise_attendance_Result>("usp_select_student_wise_attendance");
        }
    
        public virtual ObjectResult<usp_select_student_wise_attendance_detail_Result> usp_select_student_wise_attendance_detail(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_student_wise_attendance_detail_Result>("usp_select_student_wise_attendance_detail", idParameter);
        }
    
        public virtual ObjectResult<usp_select_timing_wise_attendance_Result> usp_select_timing_wise_attendance(string days, Nullable<System.DateTime> date)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_timing_wise_attendance_Result>("usp_select_timing_wise_attendance", daysParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_select_todays_attendance_Result> usp_select_todays_attendance(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_todays_attendance_Result>("usp_select_todays_attendance", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_todays_attendance_total_Result> usp_select_todays_attendance_total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_todays_attendance_total_Result>("usp_select_todays_attendance_total");
        }
    
        public virtual ObjectResult<string> usp_select_total_batch(string days)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_select_total_batch", daysParameter);
        }
    
        public virtual ObjectResult<string> usp_select_total_marked_batch(Nullable<System.DateTime> date, string day)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_select_total_marked_batch", dateParameter, dayParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_select_total_student(string days)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_select_total_student", daysParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_select_total_student_absent(string days, Nullable<System.DateTime> date)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_select_total_student_absent", daysParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_select_total_student_present(string days, Nullable<System.DateTime> date)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_select_total_student_present", daysParameter, dateParameter);
        }
    
        public virtual ObjectResult<string> usp_select_total_unmarked_batch(Nullable<System.DateTime> date, string day)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_select_total_unmarked_batch", dateParameter, dayParameter);
        }
    
        public virtual ObjectResult<usp_select_TTSGrouping_Result> usp_select_TTSGrouping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_TTSGrouping_Result>("usp_select_TTSGrouping");
        }
    
        public virtual ObjectResult<usp_select_two_attendance_Result> usp_select_two_attendance(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_two_attendance_Result>("usp_select_two_attendance", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<usp_select_undistributed_batch_list_Result> usp_select_undistributed_batch_list(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_undistributed_batch_list_Result>("usp_select_undistributed_batch_list", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_unmarked_attendance_Result> usp_select_unmarked_attendance(string days, Nullable<System.DateTime> date)
        {
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_unmarked_attendance_Result>("usp_select_unmarked_attendance", daysParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_select_unmarked_batch_list_Result> usp_select_unmarked_batch_list(string day, Nullable<System.DateTime> date)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_unmarked_batch_list_Result>("usp_select_unmarked_batch_list", dayParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_select_unreceived_batch_Result> usp_select_unreceived_batch(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_unreceived_batch_Result>("usp_select_unreceived_batch", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_unreceived_student_Result> usp_select_unreceived_student(string batch, Nullable<System.DateTime> date)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_unreceived_student_Result>("usp_select_unreceived_student", batchParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_select_voucher_Result> usp_select_voucher(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_voucher_Result>("usp_select_voucher", dateParameter);
        }
    
        public virtual ObjectResult<usp_select_voucher_student_Result> usp_select_voucher_student(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_voucher_student_Result>("usp_select_voucher_student", batchParameter);
        }
    
        public virtual ObjectResult<usp_select_zero_attendance_Result> usp_select_zero_attendance(Nullable<System.DateTime> date, string days)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var daysParameter = days != null ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_zero_attendance_Result>("usp_select_zero_attendance", dateParameter, daysParameter);
        }
    
        public virtual int usp_update_student_attendance(string status, Nullable<System.DateTime> markat, Nullable<int> markby, string notes, Nullable<int> id, Nullable<System.DateTime> date)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var markatParameter = markat.HasValue ?
                new ObjectParameter("markat", markat) :
                new ObjectParameter("markat", typeof(System.DateTime));
    
            var markbyParameter = markby.HasValue ?
                new ObjectParameter("markby", markby) :
                new ObjectParameter("markby", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_student_attendance", statusParameter, markatParameter, markbyParameter, notesParameter, idParameter, dateParameter);
        }
    
        public virtual int usp_update_student_voucher(string status, Nullable<System.DateTime> markat, Nullable<int> markby, string notes, Nullable<int> id, Nullable<System.DateTime> date)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var markatParameter = markat.HasValue ?
                new ObjectParameter("markat", markat) :
                new ObjectParameter("markat", typeof(System.DateTime));
    
            var markbyParameter = markby.HasValue ?
                new ObjectParameter("markby", markby) :
                new ObjectParameter("markby", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_student_voucher", statusParameter, markatParameter, markbyParameter, notesParameter, idParameter, dateParameter);
        }
    
        public virtual int usp_update_user_password(string password, Nullable<int> uid)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_user_password", passwordParameter, uidParameter);
        }
    
        public virtual ObjectResult<usp_select_student_id_for_do_Result> usp_select_student_id_for_do(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_student_id_for_do_Result>("usp_select_student_id_for_do", batchParameter);
        }
    
        public virtual int usp_update_student_drop_out(string note, Nullable<int> id)
        {
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_student_drop_out", noteParameter, idParameter);
        }
    
        public virtual ObjectResult<usp_select_student_id_for_bt_Result> usp_select_student_id_for_bt(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_student_id_for_bt_Result>("usp_select_student_id_for_bt", batchParameter);
        }
    }
}
