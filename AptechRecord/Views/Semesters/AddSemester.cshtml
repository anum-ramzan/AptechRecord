@model AptechRecord.Models.Semester

@{
    ViewBag.Title = "Add new semester";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section contentHeader{
    <h1>
        Semester
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href=@Url.Action("Dashboard", "Admin")><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li><a href=@Url.Action("Index", "Semesters")><i class="fa fa-list"></i>Semester</a></li>
        <li>Add new semester</li>
    </ol>
}
<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">@ViewBag.Title</h3>
            </div>
            <div class="box-body">
                @using (Html.BeginForm("AddSemester", "Semesters", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.Label("Course", "Course", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Course", null, "Select Course Type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CourseDetail.CourseDetailTree, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Course Type", "Course Type", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 TRCourse">
                                @Html.DropDownListFor(c => c.CourseId, new List<SelectListItem>(), new { id = "CourseId", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SemesterName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SemesterName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SemesterName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SemesterSession, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SemesterSession, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SemesterSession, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Add Semester" class="btn btn-default" />
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-info" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {
        $('#Course').change(function () {
            $('#CourseId option').remove();
            $.ajax({
                type: "post",
                url: "/Semesters/GeCourseDetailList",
                data: { id: $('#Course').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var jobs = eval(data);
                    var items = '';
                    $('#CourseId').append("<option value='0'>Select Course type</option>");
                    $.each(jobs, function (i, item) {
                        $('#CourseId').append('<option value=' + item.CourseDetail1 + '>' + item.CourseDetailName + '</option>');
                    });

                }
            });
        });
    });
</script>  